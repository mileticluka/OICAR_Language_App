@model GamePickSentenceItemListViewModel
@inject DAL.Interfaces.ILanguageRepository languageRepository;

@{
    ViewData["Title"] = "Index";

    var languages = languageRepository.GetAllLanguages();
    var languageItems = new SelectList(languages, "Id", "Name");
}

<div id="filter-container">
    <form id="filter-form" asp-action="Index" asp-controller="GamePickSentence" method="get">
        <div class="form-group">
            <label for="searchQuery">Search</label>
            <input type="text" name="Content" class="form-control" value="@Model.Content" />
        </div>

        <div class="form-group">
            <label asp-for="LanguageId" class="control-label"></label>
            @Html.DropDownListFor(model => model.LanguageId, languageItems, "-- Select Language --", new { @class = "form-control" })
            <span asp-validation-for="LanguageId" class="text-danger"></span>
        </div>

        <input type="hidden" name="PageNumber" id="PageNumber" value="1" />

        <button type="submit" id="filterButton" class="btn btn-primary">Filter</button>
    </form>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div id="items-container">
    @await Html.PartialAsync("_ItemsListPartial", Model)
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#filterButton').on('click', function () {
                $('#PageNumber').val(1);
            });

            $('#clearButton').on('click', function () {
                $('#filter-form').find('input[type="text"], input[type="number"], input[type="checkbox"]').val('').prop('checked', false);
            });

            $('.dropdown-search').on('input', function () {
                var searchValue = $(this).val().toLowerCase();
                $(this).nextAll('.dropdown-item').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
                });
            });

            function loadItems() {
                $.ajax({
                    url: '@Url.Action("Index", "GamePickSentence")',
                    type: 'GET',
                    data: $('#filter-form').serialize(),
                    success: function (result) {
                        $('#items-container').html(result);
                        var pageNumber = $('.pagination').find('.active').text();
                        $('#PageNumber').val(pageNumber);
                    }
                });
            }

            window.loadPage = function (pageNumber) {
                $('#PageNumber').val(pageNumber);
                loadItems();
            }
        });
    </script>
}
